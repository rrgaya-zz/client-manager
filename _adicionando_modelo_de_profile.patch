Index: accounts/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/migrations/0001_initial.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
+++ accounts/migrations/0001_initial.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -0,0 +1,26 @@
+# Generated by Django 2.2.3 on 2019-07-31 08:44
+
+from django.conf import settings
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('produtos', '0001_initial'),
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Profile',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('ebooks', models.ManyToManyField(blank=True, to='produtos.Produto')),
+                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+            ],
+        ),
+    ]
Index: accounts/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/models.py	(revision 638883497f716f57f3ab3d0ff2ebee5dfd5d9436)
+++ accounts/models.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -1,3 +1,21 @@
+from django.conf import settings
+from django.contrib.auth import get_user_model
 from django.db import models
+from django.db.models.signals import post_save
+from produtos.models import Produto
+
+User = get_user_model()
 
-# Create your models here.
+class Profile(models.Model):
+    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
+    ebooks = models.ManyToManyField(Produto, blank=True)
+
+    def __str__(self):
+        return self.user.username
+
+
+def post_save_profile_create(sender, instance, created, *args, **kwargs):
+    if created:
+        Profile.objects.get_or_create(user=instance)
+
+post_save.connect(post_save_profile_create, sender=settings.AUTH_USER_MODEL)
Index: accounts/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- accounts/views.py	(revision 638883497f716f57f3ab3d0ff2ebee5dfd5d9436)
+++ accounts/views.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -7,4 +7,4 @@
     form_class = UserCreationForm
     template_name = "registration/register.html"
     success_url = reverse_lazy("login")
-    success_message = "Usuário cadastrado"
+    success_message = "Usuário cadastrado"
\ No newline at end of file
Index: gestao_clientes/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gestao_clientes/urls.py	(revision 638883497f716f57f3ab3d0ff2ebee5dfd5d9436)
+++ gestao_clientes/urls.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -1,7 +1,5 @@
 from django.contrib import admin
 from django.urls import path, include
-from clientes import urls as clientes_urls
-from produtos import urls as produtos_urls
 from vendas import urls as vendas_urls
 from home import urls as home_urls
 from django.conf import settings
@@ -13,10 +11,10 @@
 urlpatterns = [
     path('', include(home_urls), name='home'),
     path('admin/', admin.site.urls),
-    path('api/', include('api.urls')),
+    path('api/', include('api.urls'), name="api_urls"),
     path('accounts/', include('allauth.urls')),
-    path('clientes/', include(clientes_urls), name='url_clientes'),
-    path('produtos/', include(produtos_urls), name='produtos_urls'),
+    path('clientes/', include("clientes.urls"), name='url_clientes'),
+    path('produtos/', include("produtos.urls"), name='produtos_urls'),
     path('vendas/', include(vendas_urls), name='vendas_urls'),
     path('login/', auth_views.LoginView.as_view(), name='login'),
     path('conta/', include(url_auth)),
Index: produtos/templates/produtos/produtos.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- produtos/templates/produtos/produtos.html	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
+++ produtos/templates/produtos/produtos.html	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -0,0 +1,14 @@
+{% extends 'base.html' %}
+{% load bootstrap %}
+
+{% block title %} Produtos {% endblock %}
+
+{% block main %}
+    <h1>Produtos</h1>
+    {% for produto in produtos %}
+        <ul>
+            <li>{{ produto }}</li>
+        </ul>
+    {% endfor %}
+
+{% endblock %}
Index: produtos/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- produtos/urls.py	(revision 638883497f716f57f3ab3d0ff2ebee5dfd5d9436)
+++ produtos/urls.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -1,9 +1,9 @@
 from django.urls import path
-from .views import ProdutoApi
+from .views import ProdutoApi, ProductList
 
 
 urlpatterns = [
-    # path('', person_list, name='person_list'),
+    path('', ProductList, name='person_list'),
     path('api/', ProdutoApi.as_view(), name='produto_apu'),
 
 ]
\ No newline at end of file
Index: produtos/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- produtos/views.py	(revision 638883497f716f57f3ab3d0ff2ebee5dfd5d9436)
+++ produtos/views.py	(revision 8a1d89a5f51b04cd689fd1add256573004227c1b)
@@ -4,6 +4,5 @@
 
 
 class ProdutoApi(generics.ListAPIView):
-
     queryset = Produto.objects.all()
     serializer_class = ProdutoSerializer
\ No newline at end of file
